@startuml
class refactoring_guru.abstract_factory.example.checkboxes.MacOSCheckbox {
+ void paint()
}

class refactoring_guru.abstract_factory.example.buttons.MacOSButton {
+ void paint()
}

interface refactoring_guru.abstract_factory.example.factories.GUIFactory {
~ Button createButton()
~ Checkbox createCheckbox()
}

class refactoring_guru.abstract_factory.example.app.Application {
- Button button
- Checkbox checkbox
+ void paint()
}


class refactoring_guru.abstract_factory.example.factories.MacOSFactory {
+ Button createButton()
+ Checkbox createCheckbox()
}

class refactoring_guru.abstract_factory.example.buttons.WindowsButton {
+ void paint()
}

class refactoring_guru.abstract_factory.example.checkboxes.WindowsCheckbox {
+ void paint()
}

interface refactoring_guru.abstract_factory.example.checkboxes.Checkbox {
~ void paint()
}

class refactoring_guru.abstract_factory.example.factories.WindowsFactory {
+ Button createButton()
+ Checkbox createCheckbox()
}

interface refactoring_guru.abstract_factory.example.buttons.Button {
~ void paint()
}

class refactoring_guru.abstract_factory.example.Demo {
- {static} Application configureApplication()
+ {static} void main(String[])
}



refactoring_guru.abstract_factory.example.checkboxes.Checkbox <|.. refactoring_guru.abstract_factory.example.checkboxes.MacOSCheckbox
refactoring_guru.abstract_factory.example.buttons.Button <|.. refactoring_guru.abstract_factory.example.buttons.MacOSButton
refactoring_guru.abstract_factory.example.factories.GUIFactory <|.. refactoring_guru.abstract_factory.example.factories.MacOSFactory
refactoring_guru.abstract_factory.example.buttons.Button <|.. refactoring_guru.abstract_factory.example.buttons.WindowsButton
refactoring_guru.abstract_factory.example.checkboxes.Checkbox <|.. refactoring_guru.abstract_factory.example.checkboxes.WindowsCheckbox
refactoring_guru.abstract_factory.example.factories.GUIFactory <|.. refactoring_guru.abstract_factory.example.factories.WindowsFactory
@enduml